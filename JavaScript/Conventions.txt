Annotations:

@class:
    - Needed if an entity has to be classified as a class

@variable:
    - Needed if the entity has to be classified as a variable

@function:
    - Needed if the entity has to be classified as a function.

@param: <parameter_name>:<type>:<display_name>
    - All parameters need not be covered with @param
    - <display_name> and <type> is optional for @param

@return: <type>:<display_name>
    - Entirely optional
    - If used, display name is mandatory
    - void return will be assumed if not used


displayName: <name>
    - Entirely optional
    - If not used, the display name will be the function's name in title case.

aliases: <alias1>, <alias2>..
    - Entirely optional
    - Comma separated

important: 
    - Entirely optional
    - No RHS value

flags: <flag1>, <flag2>...
    - Entirely optional
    - Comma separated

hintText: <text>
    - Entirely optional
    - All seperators are ignored



Types:
    int
    float
    bool
    string
    object

Flags:
    debugonly
    pure



Example:

/*
    displayName: Test Func
    @param: num1: float: N
    @param: str1: string
    @param: obj1: object|<class_name>
*/
function testFunc(num1, str1, obj1, arg)
{

}

